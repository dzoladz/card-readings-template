{"version":3,"sources":["AppContext.js","Components/Button/Button.js","Components/Header/Header.js","Components/SingleCard/SingleCard.js","Components/ThreeCardDraw/ThreeCardDraw.js","Components/YesNoQuestion/YesNoQuestion.js","Components/YesNoQuestion/YesNoAnswer.js","Components/ExploreCards/ExploreSuit.js","Components/ExploreCards/ExploreCards.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Context","React","createContext","Provider","children","useState","cardsJSON","cardDeck","setCardDeck","showTCD","setShowTCD","showYNQ","setShowYNQ","showYNA","setShowYNA","showETT","setShowETT","userQuestion","setUserQuestion","modalShow","setModalShow","modalCard","setModalCard","displaySuit","setDisplaySuit","shuffle","array","i","j","temp","length","Math","floor","random","handleShow","value","threeCardDraw","setTimeout","yesNoQuestion","yesNoAnswer","handleInputChange","event","target","exploreTheDeck","handleClose","showCardModal","displaycard","Btn","props","Button","variant","className","onClick","name","Header","useContext","Jumbotron","fluid","SingleCard","src","alt","delay","id","ThreeCardDraw","td","setTD","useEffect","Container","Row","slice","map","tarot","Col","xs","md","lg","key","image","past","present","future","YesNoQuestion","sm","InputGroup","FormControl","autoFocus","placeholder","aria-label","aria-describedby","onChange","onKeyPress","Append","YesNoAnswer","yesno","ExploreSuit","min","max","card","ExploreCards","exploreData","exploreJSON","data","CardModal","Modal","show","onHide","Body","keywords","general","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a20248f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport cardsJSON from \"./Components/JSON/deck.json\";\n\nconst Context = React.createContext({});\n\nconst Provider = ({ children }) => {\n  const [cardDeck, setCardDeck] = useState([...cardsJSON]);\n  const [showTCD, setShowTCD] = useState(false);\n  const [showYNQ, setShowYNQ] = useState(false);\n  const [showYNA, setShowYNA] = useState(false);\n  const [showETT, setShowETT] = useState(false);\n  const [userQuestion, setUserQuestion] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [modalCard, setModalCard] = useState([]);\n  const [displaySuit, setDisplaySuit] = useState([]);\n\n\n  const shuffle = array => {\n    let i = 0;\n    let j = 0;\n    let temp = null;\n    for (i = array.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  const threeCardDraw = () => {\n    setCardDeck(shuffle(cardDeck));\n    if (showTCD === false) {\n      setShowYNQ(false);\n      setShowYNA(false);\n      setShowETT(false);\n      setShowTCD(true);  \n    } else {\n      setShowTCD(false);\n      setTimeout(()=> { // this is a hack to set state to false to force a re-render\n        setShowTCD(true)\n      }, 0);\n    };\n  };\n\n  const yesNoQuestion = () => {\n    setCardDeck(shuffle(cardDeck));\n    setUserQuestion(\"\");\n    setShowTCD(false);\n    setShowYNA(false);\n    setShowETT(false);\n    setShowYNQ(true);\n  };\n\n  const yesNoAnswer = () => {\n    setShowTCD(false);\n    setShowYNQ(false);\n    setShowETT(false);\n    setShowYNA(true);\n  };\n\n  const handleInputChange = event => setUserQuestion(event.target.value);\n\n  const exploreTheDeck = () => {\n    setShowTCD(false);\n    setShowYNQ(false);\n    setShowYNA(false);\n    setShowETT(true);\n  };\n\n  const handleClose = () => setModalShow(false);\n\n  const handleShow = () => setModalShow(true);\n\n  const showCardModal = displaycard => {\n    setModalCard(displaycard);\n    handleShow();\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        cardDeck,\n        showTCD,\n        showYNQ,\n        showYNA,\n        showETT,\n        userQuestion,\n        modalShow,\n        modalCard,\n        displaySuit,\n        setDisplaySuit,\n        threeCardDraw,\n        yesNoQuestion,\n        yesNoAnswer,\n        handleInputChange,\n        exploreTheDeck,\n        handleClose,\n        handleShow,\n        showCardModal\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport { Context, Provider };\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Btn = props => {\n  return (\n    <Button variant=\"outline-light\" className=\"m-1 mb-3\" onClick={props.onClick}>\n      {props.name}\n    </Button>\n  );\n};\n\nexport default Btn;\n","import React, { useContext } from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport Button from \"../Button/Button\";\nimport { Context } from \"../../AppContext\";\n\nconst Header = () => {\n  const { threeCardDraw, yesNoAnswer, exploreTheDeck } = useContext(Context);\n\n  return (\n    <Jumbotron fluid className=\"jumbotron text-center p-3\">\n      <h1 className=\"display-4 text-light\">Speculative Card Deck</h1>\n      <Button name=\"Past, Present, Future\" onClick={threeCardDraw} />\n      <Button name=\"Draw One Card\" onClick={yesNoAnswer} />\n      <Button name=\"Explore the Deck\" onClick={exploreTheDeck} />\n    </Jumbotron>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst SingleCard = props => {\n  return (\n    <img\n      src={props.src}\n      alt={props.alt}\n      className={\"card animated flipInY delay-\" + props.delay + \"s\"}\n      value={props.id}\n      onClick={props.onClick}\n    />\n  );\n};\n\nexport default SingleCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../AppContext\";\nimport SingleCard from \"../SingleCard/SingleCard\";\n\nconst ThreeCardDraw = () => {\n  const { showTCD, cardDeck, showCardModal } = useContext(Context);\n  const [td, setTD] = useState(cardDeck);\n\n  useEffect(() => {\n    setTD(cardDeck);\n  }, [cardDeck]);\n\n  if (!showTCD) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center animated mb-4\">\n        {td.slice(0, 3).map((tarot, i) => (\n          <Col xs={4} md={3} lg={2} key={tarot.id} className=\"p-1\">\n            <SingleCard\n              src={tarot.image}\n              alt={tarot.name}\n              delay={i}\n              value={tarot.id}\n              onClick={() => showCardModal(tarot)}\n            />\n          </Col>\n        ))}\n        <Col xs={10} className=\"tarot-read animated fadeIn delay-3s slower\">\n          <p>\n            <b>The Past:</b> ({cardDeck[0].name}) {cardDeck[0].past}\n          </p>\n          <p>\n            <b>The Present:</b> ({cardDeck[1].name}) {cardDeck[1].present}\n          </p>\n          <p>\n            <b>The Future:</b> ({cardDeck[2].name}) {cardDeck[2].future}\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ThreeCardDraw;\n","import React, { useContext } from \"react\";\nimport { Container, Row, Col, FormControl, InputGroup, Button } from \"react-bootstrap\";\nimport { Context } from \"../../AppContext\";\n\nconst YesNoQuestion = () => {\n  const { showYNQ, handleInputChange, userQuestion, yesNoAnswer } = useContext(Context);\n\n  if (!showYNQ) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xs={12} sm={8}>\n          <InputGroup>\n            <FormControl\n              autoFocus\n              placeholder=\"Enter your Yes/No question here....\"\n              aria-label=\"User's Question\"\n              aria-describedby=\"User's Question Input\"\n              value={userQuestion}\n              onChange = { handleInputChange }\n              onKeyPress = {(event) => {\n                if (event.key === \"Enter\") {\n                  yesNoAnswer()\n                }\n              }}\n            />\n            <InputGroup.Append>\n              <Button \n                variant=\"outline-light\"\n                onClick={yesNoAnswer}  \n              >Submit</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default YesNoQuestion;\n","import React, { useContext } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../AppContext\";\nimport SingleCard from \"../SingleCard/SingleCard\";\n\nconst YesNoAnswer = () => {\n  const { showYNA, cardDeck, showCardModal, userQuestion } = useContext(\n    Context\n  );\n\n  if (!showYNA) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xs={6} sm={4} md={3}>\n          <SingleCard\n            src={cardDeck[0].image}\n            alt={cardDeck[0].name}\n            delay={0}\n            value={cardDeck[0].id}\n            onClick={() => showCardModal(cardDeck[0])}\n          />\n        </Col>\n        <Col xs={12} sm={8} md={9} className=\"tarot-read animated fadeIn delay-1s slower\">\n          <p>Your question: {userQuestion}</p>\n          <hr />\n          <p>{cardDeck[0].yesno}</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default YesNoAnswer;\n","import React, { useContext } from \"react\";\nimport {Row, Col} from \"react-bootstrap\"\nimport cardsJSON from \"../JSON/deck.json\";\nimport { Context } from \"../../AppContext\";\nimport SingleCard from \"../SingleCard/SingleCard\";\n\nconst ExploreSuit = () => {\n  const { displaySuit, showCardModal } = useContext(Context);\n  const tarot = [...cardsJSON];\n\n  if (displaySuit.length === 0) {\n    return null;\n  }\n  return (\n    <Row className=\"justify-content-center\">\n      <Col xs={12} className=\"explore-title\">\n        <h1>{displaySuit.name}</h1>\n      </Col>\n      {tarot.slice(displaySuit.min, displaySuit.max).map((card) => (\n        <Col xs={4} md={3} lg={2} key={card.id} className=\"p-1\">\n          <SingleCard\n            src={card.image}\n            alt={card.name}\n            value={card.id}\n            onClick={() => showCardModal(card)}\n          />\n        </Col>\n      ))}      \n    </Row>\n\n  );\n};\n\nexport default ExploreSuit;\n","import React, { useContext } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport exploreJSON from \"../JSON/exploreDeck.json\";\nimport Button from \"../Button/Button\";\nimport ExploreSuit from \"./ExploreSuit\";\nimport { Context } from \"../../AppContext\";\n\nconst ExploreCards = () => {\n  const { showETT, setDisplaySuit } = useContext(Context);\n  const exploreData = exploreJSON;\n\n  if (!showETT) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        {exploreData.map((data, i) => (\n          <Button \n            onClick={() => setDisplaySuit(exploreData[data.id])}\n            name = {data.name}\n            key={i}\n          />\n        ))}\n      </Row>\n      <ExploreSuit />\n    </Container>\n  );\n};\n\nexport default ExploreCards;\n","import React, { useContext } from \"react\";\nimport { Modal, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Context } from \"../../AppContext\";\n\nconst CardModal = () => {\n  const { modalCard, modalShow, handleClose } = useContext(Context);\n\n\n  return (\n    <Modal show={modalShow} onHide={handleClose}>\n      <Modal.Body className=\"modal-body\">\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <h1>{modalCard.name}</h1>\n              <hr />\n              <p>{modalCard.keywords}</p>\n              <hr />\n            </Col>\n            <Col xs={8} sm={4} className=\"mx-auto p-0\">\n              <img src={modalCard.image} alt={modalCard.name} />\n            </Col>\n            <Col xs={12} sm={8}>\n              <p>{modalCard.general}</p>\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer className=\"modal-body\">\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CardModal;\n","import React from \"react\";\nimport { Provider } from \"./AppContext\";\nimport \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport ThreeCardDraw from \"./Components/ThreeCardDraw/ThreeCardDraw\";\nimport YesNoQuestion from \"./Components/YesNoQuestion/YesNoQuestion\";\nimport YesNoAnswer from \"./Components/YesNoQuestion/YesNoAnswer\";\nimport ExploreCards from \"./Components/ExploreCards/ExploreCards\";\nimport Modal from \"./Components/Modal/Modal\";\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Header />\n      <ThreeCardDraw />\n      <YesNoQuestion />\n      <YesNoAnswer />\n      <ExploreCards />\n      <Modal />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}